blueprint:
  name: ZHC5010 Button Light Control
  description: Control multiple lights with multiple ZHC5010 devices using Z-Wave JS.
  domain: automation
  input:
    zhc5010_devices_on:
      name: ZHC5010 Devices On
      description: Select multiple ZHC5010 devices for on/off control.
      selector:
        device:
          integration: zwave_js
          manufacturer: Logic Group
          model: ZHC5010
          multiple: true
    zhc5010_devices_dim:
      name: ZHC5010 Devices Dim
      description: Select multiple ZHC5010 devices for dim control.
      selector:
        device:
          integration: zwave_js
          manufacturer: Logic Group
          model: ZHC5010
          multiple: true
    target_lights:
      name: Target Lights
      description: Select multiple target lights to control.
      selector:
        entity:
          domain: light
          multiple: true
    dim_brightness:
      name: Dim Brightness
      description: Set the dim brightness level.
      default: 50
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"
          mode: slider
    transition_time:
      name: Transition Time
      description: Set the transition speed (in seconds) for light changes.
      default: 1.0
      selector:
        number:
          min: 0
          max: 10
          unit_of_measurement: "s"
          mode: slider
          step: 0.1

mode: single
max_exceeded: silent
trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: 
        # This listens for any of the selected devices
        - device_id for device in !input zhc5010_devices_on
      trigger: 
        - !input zhc5010_devices_on

variables:
  button_id: '{{ trigger.event.data.property_key_name }}'
  button_action: '{{ trigger.event.data.value }}'
  selected_devices_on: !input zhc5010_devices_on
  selected_devices_dim: !input zhc5010_devices_dim
  target_lights: !input target_lights
  dim_brightness: !input dim_brightness
  transition_time: !input transition_time

condition:
  # Ensure the event matches one of the selected devices.
  - condition: template
    value_template: >
      {{ button_id in selected_devices_on or button_id in selected_devices_dim }}

action:
  - choose:
      # Single button press toggles light brightness between 100% and 0%
      - conditions:
          - condition: template
            value_template: "{{ button_action == 'KeyPressed' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input target_lights
                    state: "on"
                sequence:
                  - service: light.turn_off
                    data:
                      entity_id: !input target_lights
                      transition: "{{ transition_time }}"
              - conditions:
                  - condition: state
                    entity_id: !input target_lights
                    state: "off"
                sequence:
                  - service: light.turn_on
                    data:
                      entity_id: !input target_lights
                      brightness_pct: 100
                      transition: "{{ transition_time }}"

      # Button hold sets light to a specific brightness
      - conditions:
          - condition: template
            value_template: "{{ button_action == 'KeyHeldDown' }}"
        sequence:
          - service: light.turn_on
            data:
              entity_id: !input target_lights
              brightness_pct: !input dim_brightness
              transition: "{{ transition_time }}"
