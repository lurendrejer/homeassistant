blueprint:
  name: ZHC5010 Button Light Control
  description: Control a light with a selected button on the ZHC5010 using Z-Wave JS.
  domain: automation
  input:
    zhc5010_devices:
      name: ZHC5010 Devices
      description: Select multiple ZHC5010 devices to use.
      selector:
        device:
          integration: zwave_js
          manufacturer: Logic Group
          model: ZHC5010
          multiple: true
    target_light:
      name: Target Light
      description: Select the light to control.
      selector:
        entity:
          domain: light
    selected_buttons:
      name: Select Buttons
      description: Choose the buttons to be used.
      selector:
        select:
          options:
            - Button 1
            - Button 2
            - Button 3
            - Button 4
          multiple: true
    hold_brightness:
      name: Hold Brightness
      description: Brightness level to set when the button is held.
      default: 50
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"
          mode: slider
    transition_time:
      name: Transition Time
      description: Set the transition speed (in seconds) for light changes.
      default: 1.0
      selector:
        number:
          min: 0
          max: 10
          unit_of_measurement: "s"
          mode: slider
          step: 0.1

mode: single
max_exceeded: silent
trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: 
        # This listens for any of the selected devices
        - device_id for device in !input zhc5010_devices

variables:
  button_id: '{{ trigger.event.data.property_key_name }}'
  button_action: '{{ trigger.event.data.value }}'
  selected_buttons: !input selected_buttons
  hold_brightness: !input hold_brightness
  transition_time: !input transition_time

condition:
  # Ensure the event matches one of the selected buttons.
  - condition: template
    value_template: >
      {{ button_id in selected_buttons }}

action:
  - choose:
      # Single button press toggles light brightness between 100% and 0%
      - conditions:
          - condition: template
            value_template: "{{ button_action == 'KeyPressed' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input target_light
                    state: "on"
                sequence:
                  - service: light.turn_off
                    data:
                      entity_id: !input target_light
                      transition: "{{ transition_time }}"
              - conditions:
                  - condition: state
                    entity_id: !input target_light
                    state: "off"
                sequence:
                  - service: light.turn_on
                    data:
                      entity_id: !input target_light
                      brightness_pct: 100
                      transition: "{{ transition_time }}"

      # Button hold sets light to a specific brightness
      - conditions:
          - condition: template
            value_template: "{{ button_action == 'KeyHeldDown' }}"
        sequence:
          - service: light.turn_on
            data:
              entity_id: !input target_light
              brightness_pct: !input hold_brightness
              transition: "{{ transition_time }}"
